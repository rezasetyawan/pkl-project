import Head from "next/head";
import { onAuthStateChanged } from "firebase/auth";
import { useRouter } from "next/router";
import { auth, db } from "@/lib/firebase";
import { doc, getDoc } from "firebase/firestore";
import useSWR from "swr";
import { useState, useEffect } from "react";
import Loading from "@/components/Loading";

export default function Home() {
  const [docId, setDocId] = useState("");
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const router = useRouter();

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      if (!user) {
        setIsAuthenticated(false);
        router.push("/auth/login");
      } else {
        setIsAuthenticated(true);
        if (user.displayName !== null) {
          setDocId(user.displayName);
        } else {
          setDocId(user.uid);
        }
        setIsLoading(false);
      }
    });

    return unsubscribe;
  }, [router]);

  const fetcher = async (docId) => {
    const docSnapshot = await getDoc(doc(db, "users", docId));
    const userData = docSnapshot.data();
    return { ...userData };
  };

  const { data, error } = useSWR(isAuthenticated ? docId : null, fetcher, {
    suspense: true,
    shouldRetryOnError: (error) => {
      if (isAuthenticated) {
        return true;
      }
      return false;
    },
  });


  if (isLoading) {
    return <Loading></Loading>;
  }

  if (!isAuthenticated) {
    return null;
  }

  if (typeof window !== "undefined") {
    console.log(data);
    switch (data.role) {
      case "student":
        router.push("/student/");
        break;
      case "public_relation":
        router.push("/public-relation/");
        break;
      case "company":
        router.push("/company/");
        break;
      default:
        router.push("/");
    }
    return null;
  }

  return (
    <>
      <Head>
        <title>PKL PROJECT</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    </>
  );
}
